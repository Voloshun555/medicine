{"version":3,"file":"static/js/160.ed06bddf.chunk.js","mappings":"mJACA,QAA4B,yBAA5B,EAA6D,qB,aCCtD,MAAMA,EAAQC,IAAiC,IAAhC,SAAEC,EAAQ,aAAEC,GAAcF,EAC9C,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAQC,SAAA,EACvBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QAELH,EAAAA,EAAAA,KAAA,SACEK,KAAK,OACLC,KAAK,OACLC,MAAOT,EAASQ,KAChBE,SAAUT,QAGdK,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELH,EAAAA,EAAAA,KAAA,SACEK,KAAK,QACLC,KAAK,QACLC,MAAOT,EAASW,MAChBD,SAAUT,QAGdK,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELH,EAAAA,EAAAA,KAAA,SACEK,KAAK,QACLC,KAAK,QACLC,MAAOT,EAASY,MAChBF,SAAUT,QAGdK,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,WAELH,EAAAA,EAAAA,KAAA,SACEK,KAAK,OACLC,KAAK,UACLC,MAAOT,EAASa,QAChBH,SAAUT,WAIZ,E,uCCnCV,MAAMa,EAAe,CACnBN,KAAM,GACNG,MAAO,GACPC,MAAO,GACPC,QAAS,IA6CX,EA1CoBE,KAClB,MAAMC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,KAAKG,WACzCC,EAAaJ,EAAKK,QACtB,CAACC,EAAaC,IACZD,EAAcC,EAAaC,MAAQD,EAAaE,UAClD,GAGIC,GAAWC,EAAAA,EAAAA,OACV3B,EAAU4B,IAAeC,EAAAA,EAAAA,UAASf,GAiBzC,OACER,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAE0B,UAAUzB,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAE2B,SAAS1B,SAAA,EACzBH,EAAAA,EAAAA,KAACJ,EAAK,CAACE,SAAUA,EAAUC,aAnBX+B,IACpB,MAAM,KAAExB,EAAI,MAAEC,GAAUuB,EAAEC,OAC1BL,GAAaM,IAAQ,IAChBA,EACH,CAAC1B,GAAOC,KACP,KAeCP,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAACC,UAAWpB,EAAMG,SAAUH,EAAMqB,MAAM,QAEzD/B,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAEkC,OAAOjC,SAAA,EACvBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,gBAAce,EAAW,QAC5BlB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAEmC,aAAcC,QAhBnBR,IACpBA,EAAES,iBAEFf,GAASgB,EAAAA,EAAAA,GAAkB,CAAEC,KAAM3C,EAAU4C,QAAS5B,KACtDU,GAASmB,EAAAA,EAAAA,OACTjB,EAAYd,EAAa,EAWoCT,SAAC,gBAIxD,C","sources":["webpack://medicine/./src/components/forma/forma.module.scss?f727","components/forma/forma.jsx","page/shoping-card.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"forma_container__Broj1\",\"forma\":\"forma_forma__V9pPC\"};","import s from './forma.module.scss'\n\nexport const Forma = ({ formData, handleChange }) => {\n  return (\n    <div className={s.container}>\n      <form className={s.forma}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Phone\n          <input\n            type=\"phone\"\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Address\n          <input\n            type=\"text\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Forma } from \"../components/forma/forma\";\nimport ListPharmacies from \"../components/list-pharmacies/listPharmacies\";\nimport { removeAllShopItem } from \"../redux/shop/shopSlice\";\nimport s from \"./pageStyle.module.scss\";\nimport { createNewShopItem } from \"../redux/basket/basketOperation\";\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  address: \"\",\n};\n\nconst ShopingCard = () => {\n  const shop = useSelector((state) => state.shop.shopList);\n  const totalPrice = shop.reduce(\n    (accumulator, currentValue) =>\n      accumulator + currentValue.price * currentValue.quantity,\n    0\n  );\n\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState(initialState);\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    dispatch(createNewShopItem({ user: formData, product: shop }));\n    dispatch(removeAllShopItem());\n    setFormData(initialState);\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.wrapShop}>\n        <Forma formData={formData} handleChange={handleChange} />\n        <ListPharmacies medicines={shop} shopList={shop} step={true} />\n      </div>\n      <div className={s.submit}>\n        <p>Total price: {totalPrice}$</p>\n        <button className={s.buttonSubmit} onClick={handleSubmit}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShopingCard;\n"],"names":["Forma","_ref","formData","handleChange","_jsx","className","s","children","_jsxs","type","name","value","onChange","email","phone","address","initialState","ShopingCard","shop","useSelector","state","shopList","totalPrice","reduce","accumulator","currentValue","price","quantity","dispatch","useDispatch","setFormData","useState","container","wrapShop","e","target","prevData","ListPharmacies","medicines","step","submit","buttonSubmit","onClick","preventDefault","createNewShopItem","user","product","removeAllShopItem"],"sourceRoot":""}